// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/dHRUM.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calcHBInAlldHrus
void calcHBInAlldHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr);
RcppExport SEXP _dHRUM_calcHBInAlldHrus(SEXP dHRUM_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    calcHBInAlldHrus(dHRUM_ptr);
    return R_NilValue;
END_RCPP
}
// gatherHBdata
void gatherHBdata(Rcpp::XPtr<dHRUM> dHRUM_ptr);
RcppExport SEXP _dHRUM_gatherHBdata(SEXP dHRUM_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    gatherHBdata(dHRUM_ptr);
    return R_NilValue;
END_RCPP
}
// setGWtypeToAlldHrus
void setGWtypeToAlldHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::CharacterVector gwTypes, Rcpp::CharacterVector hruIds);
RcppExport SEXP _dHRUM_setGWtypeToAlldHrus(SEXP dHRUM_ptrSEXP, SEXP gwTypesSEXP, SEXP hruIdsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type gwTypes(gwTypesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type hruIds(hruIdsSEXP);
    setGWtypeToAlldHrus(dHRUM_ptr, gwTypes, hruIds);
    return R_NilValue;
END_RCPP
}
// setPTInputsToAlldHrusFromFile
void setPTInputsToAlldHrusFromFile(Rcpp::XPtr<dHRUM> dHRUM_ptr, std::string namInpFilet);
RcppExport SEXP _dHRUM_setPTInputsToAlldHrusFromFile(SEXP dHRUM_ptrSEXP, SEXP namInpFiletSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< std::string >::type namInpFilet(namInpFiletSEXP);
    setPTInputsToAlldHrusFromFile(dHRUM_ptr, namInpFilet);
    return R_NilValue;
END_RCPP
}
// setPTInputsToAlldHrus
void setPTInputsToAlldHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::NumericVector Prec, Rcpp::NumericVector Temp, Rcpp::Date inDate);
RcppExport SEXP _dHRUM_setPTInputsToAlldHrus(SEXP dHRUM_ptrSEXP, SEXP PrecSEXP, SEXP TempSEXP, SEXP inDateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Prec(PrecSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Temp(TempSEXP);
    Rcpp::traits::input_parameter< Rcpp::Date >::type inDate(inDateSEXP);
    setPTInputsToAlldHrus(dHRUM_ptr, Prec, Temp, inDate);
    return R_NilValue;
END_RCPP
}
// setPTDateInputsToAlldHrus
void setPTDateInputsToAlldHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::NumericVector Prec, Rcpp::NumericVector Temp, Rcpp::DateVector DateVec);
RcppExport SEXP _dHRUM_setPTDateInputsToAlldHrus(SEXP dHRUM_ptrSEXP, SEXP PrecSEXP, SEXP TempSEXP, SEXP DateVecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Prec(PrecSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Temp(TempSEXP);
    Rcpp::traits::input_parameter< Rcpp::DateVector >::type DateVec(DateVecSEXP);
    setPTDateInputsToAlldHrus(dHRUM_ptr, Prec, Temp, DateVec);
    return R_NilValue;
END_RCPP
}
// setPTInputsToDistdHRUM
void setPTInputsToDistdHRUM(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::DataFrame DataDF);
RcppExport SEXP _dHRUM_setPTInputsToDistdHRUM(SEXP dHRUM_ptrSEXP, SEXP DataDFSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type DataDF(DataDFSEXP);
    setPTInputsToDistdHRUM(dHRUM_ptr, DataDF);
    return R_NilValue;
END_RCPP
}
// initdHruModel
Rcpp::XPtr<dHRUM> initdHruModel(numberDta dimdHru, Rcpp::NumericVector vecAreas, Rcpp::StringVector hrusIDs);
RcppExport SEXP _dHRUM_initdHruModel(SEXP dimdHruSEXP, SEXP vecAreasSEXP, SEXP hrusIDsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< numberDta >::type dimdHru(dimdHruSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vecAreas(vecAreasSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type hrusIDs(hrusIDsSEXP);
    rcpp_result_gen = Rcpp::wrap(initdHruModel(dimdHru, vecAreas, hrusIDs));
    return rcpp_result_gen;
END_RCPP
}
// getOutput
Rcpp::List getOutput(Rcpp::XPtr<dHRUM> dHRUM_ptr);
RcppExport SEXP _dHRUM_getOutput(SEXP dHRUM_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(getOutput(dHRUM_ptr));
    return rcpp_result_gen;
END_RCPP
}
// printToFile
void printToFile(Rcpp::XPtr<dHRUM> dHRUM_ptr, std::string namOutFilet);
RcppExport SEXP _dHRUM_printToFile(SEXP dHRUM_ptrSEXP, SEXP namOutFiletSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< std::string >::type namOutFilet(namOutFiletSEXP);
    printToFile(dHRUM_ptr, namOutFilet);
    return R_NilValue;
END_RCPP
}
// getOutputDist
Rcpp::List getOutputDist(Rcpp::XPtr<dHRUM> dHRUM_ptr);
RcppExport SEXP _dHRUM_getOutputDist(SEXP dHRUM_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(getOutputDist(dHRUM_ptr));
    return rcpp_result_gen;
END_RCPP
}
// dHRUMrun
Rcpp::List dHRUMrun(Rcpp::XPtr<dHRUM> dHRUM_ptr);
RcppExport SEXP _dHRUM_dHRUMrun(SEXP dHRUM_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(dHRUMrun(dHRUM_ptr));
    return rcpp_result_gen;
END_RCPP
}
// dHRUMrunDist
Rcpp::List dHRUMrunDist(Rcpp::XPtr<dHRUM> dHRUM_ptr);
RcppExport SEXP _dHRUM_dHRUMrunDist(SEXP dHRUM_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(dHRUMrunDist(dHRUM_ptr));
    return rcpp_result_gen;
END_RCPP
}
// setParamsToAlldHrus
void setParamsToAlldHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::NumericVector ParsVec, Rcpp::CharacterVector ParsNames);
RcppExport SEXP _dHRUM_setParamsToAlldHrus(SEXP dHRUM_ptrSEXP, SEXP ParsVecSEXP, SEXP ParsNamesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ParsVec(ParsVecSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type ParsNames(ParsNamesSEXP);
    setParamsToAlldHrus(dHRUM_ptr, ParsVec, ParsNames);
    return R_NilValue;
END_RCPP
}
// setParamsToOnedHru
void setParamsToOnedHru(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::NumericVector ParsVec, Rcpp::CharacterVector ParsNames, unsigned singleHruId);
RcppExport SEXP _dHRUM_setParamsToOnedHru(SEXP dHRUM_ptrSEXP, SEXP ParsVecSEXP, SEXP ParsNamesSEXP, SEXP singleHruIdSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ParsVec(ParsVecSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type ParsNames(ParsNamesSEXP);
    Rcpp::traits::input_parameter< unsigned >::type singleHruId(singleHruIdSEXP);
    setParamsToOnedHru(dHRUM_ptr, ParsVec, ParsNames, singleHruId);
    return R_NilValue;
END_RCPP
}
// setParsToDistdHRUM
void setParsToDistdHRUM(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::DataFrame ParsDF, bool PrintPars);
RcppExport SEXP _dHRUM_setParsToDistdHRUM(SEXP dHRUM_ptrSEXP, SEXP ParsDFSEXP, SEXP PrintParsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type ParsDF(ParsDFSEXP);
    Rcpp::traits::input_parameter< bool >::type PrintPars(PrintParsSEXP);
    setParsToDistdHRUM(dHRUM_ptr, ParsDF, PrintPars);
    return R_NilValue;
END_RCPP
}
// calcPetToAllHrus
void calcPetToAllHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr, numberSel Latitude, std::string PetTypeStr);
RcppExport SEXP _dHRUM_calcPetToAllHrus(SEXP dHRUM_ptrSEXP, SEXP LatitudeSEXP, SEXP PetTypeStrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< numberSel >::type Latitude(LatitudeSEXP);
    Rcpp::traits::input_parameter< std::string >::type PetTypeStr(PetTypeStrSEXP);
    calcPetToAllHrus(dHRUM_ptr, Latitude, PetTypeStr);
    return R_NilValue;
END_RCPP
}
// calcPetToAllHrusDist
void calcPetToAllHrusDist(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::NumericVector Latitude, Rcpp::CharacterVector PetTypeStrNames, Rcpp::CharacterVector HruIds);
RcppExport SEXP _dHRUM_calcPetToAllHrusDist(SEXP dHRUM_ptrSEXP, SEXP LatitudeSEXP, SEXP PetTypeStrNamesSEXP, SEXP HruIdsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Latitude(LatitudeSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type PetTypeStrNames(PetTypeStrNamesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type HruIds(HruIdsSEXP);
    calcPetToAllHrusDist(dHRUM_ptr, Latitude, PetTypeStrNames, HruIds);
    return R_NilValue;
END_RCPP
}
// setNumFastResAlldHrus
void setNumFastResAlldHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::NumericVector numFastRes, Rcpp::CharacterVector hruIds);
RcppExport SEXP _dHRUM_setNumFastResAlldHrus(SEXP dHRUM_ptrSEXP, SEXP numFastResSEXP, SEXP hruIdsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type numFastRes(numFastResSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type hruIds(hruIdsSEXP);
    setNumFastResAlldHrus(dHRUM_ptr, numFastRes, hruIds);
    return R_NilValue;
END_RCPP
}
// setSoilStorTypeToAlldHrus
void setSoilStorTypeToAlldHrus(Rcpp::XPtr<dHRUM> dHRUM_ptr, Rcpp::CharacterVector soilTypes, Rcpp::CharacterVector hruIds);
RcppExport SEXP _dHRUM_setSoilStorTypeToAlldHrus(SEXP dHRUM_ptrSEXP, SEXP soilTypesSEXP, SEXP hruIdsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<dHRUM> >::type dHRUM_ptr(dHRUM_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type soilTypes(soilTypesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type hruIds(hruIdsSEXP);
    setSoilStorTypeToAlldHrus(dHRUM_ptr, soilTypes, hruIds);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dHRUM_calcHBInAlldHrus", (DL_FUNC) &_dHRUM_calcHBInAlldHrus, 1},
    {"_dHRUM_gatherHBdata", (DL_FUNC) &_dHRUM_gatherHBdata, 1},
    {"_dHRUM_setGWtypeToAlldHrus", (DL_FUNC) &_dHRUM_setGWtypeToAlldHrus, 3},
    {"_dHRUM_setPTInputsToAlldHrusFromFile", (DL_FUNC) &_dHRUM_setPTInputsToAlldHrusFromFile, 2},
    {"_dHRUM_setPTInputsToAlldHrus", (DL_FUNC) &_dHRUM_setPTInputsToAlldHrus, 4},
    {"_dHRUM_setPTDateInputsToAlldHrus", (DL_FUNC) &_dHRUM_setPTDateInputsToAlldHrus, 4},
    {"_dHRUM_setPTInputsToDistdHRUM", (DL_FUNC) &_dHRUM_setPTInputsToDistdHRUM, 2},
    {"_dHRUM_initdHruModel", (DL_FUNC) &_dHRUM_initdHruModel, 3},
    {"_dHRUM_getOutput", (DL_FUNC) &_dHRUM_getOutput, 1},
    {"_dHRUM_printToFile", (DL_FUNC) &_dHRUM_printToFile, 2},
    {"_dHRUM_getOutputDist", (DL_FUNC) &_dHRUM_getOutputDist, 1},
    {"_dHRUM_dHRUMrun", (DL_FUNC) &_dHRUM_dHRUMrun, 1},
    {"_dHRUM_dHRUMrunDist", (DL_FUNC) &_dHRUM_dHRUMrunDist, 1},
    {"_dHRUM_setParamsToAlldHrus", (DL_FUNC) &_dHRUM_setParamsToAlldHrus, 3},
    {"_dHRUM_setParamsToOnedHru", (DL_FUNC) &_dHRUM_setParamsToOnedHru, 4},
    {"_dHRUM_setParsToDistdHRUM", (DL_FUNC) &_dHRUM_setParsToDistdHRUM, 3},
    {"_dHRUM_calcPetToAllHrus", (DL_FUNC) &_dHRUM_calcPetToAllHrus, 3},
    {"_dHRUM_calcPetToAllHrusDist", (DL_FUNC) &_dHRUM_calcPetToAllHrusDist, 4},
    {"_dHRUM_setNumFastResAlldHrus", (DL_FUNC) &_dHRUM_setNumFastResAlldHrus, 3},
    {"_dHRUM_setSoilStorTypeToAlldHrus", (DL_FUNC) &_dHRUM_setSoilStorTypeToAlldHrus, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_dHRUM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
